class Firestore{constructor(){firebase.initializeApp(firebaseConfig),this.db=firebase.firestore()}get(t,e,i=()=>{}){this.db.collection(t).doc(e).get().then(t=>{t.exists?i(t.data()):i(null)})}getAllDoc(t,e=()=>{}){this.db.collection(t).get().then(t=>{var i=[];t.forEach(t=>{i.push({id:t.id,data:t.data()})}),e(i)})}add(t,e,i=()=>{}){this.db.collection(t).add(e).then(t=>{i(t.id)})}query(t,e,i,s,a=()=>{}){this.db.collection(t).where(e,i,s).get().then(t=>{var e=[];t.forEach(t=>{e.push({id:t.id,data:t.data()})}),a(e)})}set(t,e,i,s=()=>{}){this.db.collection(t).doc(e).set(i).then(()=>{s(!0)}).catch(()=>{s(!1)})}update(t,e,i,s=()=>{}){this.db.collection(t).doc(e).update(i).then(s(!0)).catch(()=>{s(!1)})}}class RTDatabase{constructor(){firebase.initializeApp(firebaseConfig),this.db=firebase.database()}set(t,e){this.db.ref(t).set(e)}get(t,e=()=>{}){this.db.ref(t).get().then(t=>{t.exists&&e(t.val())})}onChange(t,e,i=()=>{}){this.db.ref(t).on(e,t=>{i({key:t.key,value:t.val()})})}update(t,e,i=()=>{}){this.db.ref(t).update(e).then(()=>{i()})}add(t,e,i=()=>{}){let s=this.db.ref(t).push().key;this.set(`${t}${s}`,e),i(s)}}class FilesStorage{constructor(){firebase.initializeApp(firebaseConfig),this.db=firebase.storage()}delete(t){this.db.ref(t)}uploadBase64(t,e,i=()=>{}){this.db.ref(t).putString(e,"base64").then(t=>{i()})}}class FirebaseBaseAuth{constructor(){firebase.initializeApp(firebaseConfig),this.auth=firebase.auth()}signInAnonymously(t){this.auth.signInAnonymously().then(()=>{t()})}register(t,e){this.auth.createUserWithEmailAndPassword(t,e).then(t=>{t.user})}login(t,e,i=()=>{}){this.auth.signInWithEmailAndPassword(t,e).then(t=>{i(t.user)}).catch(t=>{i(t.code)})}onAuth(t=()=>{}){this.auth.onAuthStateChanged(e=>{e?t(e):t(null)})}signOut(t=()=>{}){this.auth.signOut().then(()=>{t()})}getCurrentUser(t=()=>{}){t(this.auth.currentUser)}getUserInfo(t=()=>{}){this.auth.currentUser}updateProfile(t,e=()=>{}){let i=this.auth.currentUser;i.updateProfile(t).then(()=>{e()})}updateEmail(t,e=()=>{}){let i=this.auth.currentUser;i.updateEmail(t).then(()=>{e()})}setPassword(t,e=()=>{}){let i=this.auth.currentUser;i.updatePassword(t).then(()=>{e()})}deleteUser(t=()=>{}){let e=this.auth.currentUser;e.delete().then(()=>{t()})}reauth(t=()=>{}){let e=this.auth.currentUser;promptForCredentials(),e.reauthenticateWithCredential}isLogged(t=()=>{}){this.onAuth(()=>{this.auth.currentUser?t(!0):t(!1)})}}class FirebaseGoogleAuth{constructor(t,e){if(firebase.initializeApp(firebaseConfig),this.auth=firebase.auth(),this.provider=new firebase.auth.GoogleAuthProvider,void 0!==t)for(var i in t)this.provider.addScope("https://www.googleapis.com/auth/"+t[i]);this.auth.useDeviceLanguage(),void 0!==e&&this.provider.setCustomParameters(e)}signInWithPopup(t=()=>{}){this.auth.signInWithPopup(this.provider).then(e=>{var i,s=e.credential;t({crendical:s,token:e.accessToken,user:e.user})}).catch(e=>{t(NaN)})}}class FirebaseFacebookAuth{constructor(t,e={display:"popup"}){if(firebase.initializeApp(firebaseConfig),this.auth=firebase.auth(),this.provider=new firebase.auth.FacebookAuthProvider,void 0!==t)for(var i in t)this.provider.addScope(t[i]);this.auth.useDeviceLanguage(),void 0!==e&&this.provider.setCustomParameters(e)}signInWithPopup(t=()=>{}){this.auth.signInWithPopup(this.provider).then(e=>{var i,s=e.credential;t({crendical:s,token:e.accessToken,user:e.user})}).catch(e=>{t(NaN)})}}class FirebaseTwitterAuth{constructor(t,e={lang:"pl"}){if(firebase.initializeApp(firebaseConfig),this.auth=firebase.auth(),this.provider=new firebase.auth.FacebookAuthProvider,void 0!==t)for(var i in t)this.provider.addScope(t[i]);void 0!==e&&this.provider.setCustomParameters(e)}signInWithPopup(t=()=>{}){this.auth.signInWithPopup(this.provider).then(e=>{var i=e.credential,s=e.accessToken,a=e.secret;t({crendical:i,token:s,user:e.user,secret:a})}).catch(e=>{t(NaN)})}}